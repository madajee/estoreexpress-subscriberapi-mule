#%RAML 1.0
title: estoreexpress-subscriberapi-mule

uses:
  apiLib: datatypes/apilib.raml

/ping:
  get:
    description: ping
    queryParameters:
      username:
        description: username
        type: apiLib.username
        required: false
      password:
        description: password
        type: apiLib.password
        required: false
    responses:
      200:
        body:
          application/json:
            type: object
            examples:
              example1: !include examples/test1.raml
              example2: !include examples/test2.raml
/createuser:
  post:
    description: createuser
    body:
        application/json:
          type:  apiLib.createuser
          example: |
            {
              "username": "test1",
              "password": "test",
              "name": "test1"
            }
    responses:
      200:
        body:
          application/json:
            type: object
            examples:
              example1: !include examples/createuser/test1.raml
              example2: !include examples/createuser/test2.raml
/updateuser:
  post:
    description: updateuser
    body:
        application/json:
          type:  apiLib.updateuser
          example: |
            {
              "username": "test1",
              "password": "test",
              "lastlogin": "2016-01-01"
            }
    responses:
      200:
        body:
          application/json:
            type: object
            examples:
              example1: !include examples/updateuser/test1.raml
/deleteuser:
  post:
    description: deleteuser
    body:
        application/json:
          type:  apiLib.deleteuser
          example: |
            {
              "username": "test1",
              "name": "test1"
            }
    responses:
      200:
        body:
          application/json:
            type: object
            examples:
              example1: !include examples/deleteuser/test1.raml
/readuser:
  get:
    description: readuser
    responses:
      200:
        body:
          application/json:
            type: object
            examples:
              example1: !include examples/readuser/test1.raml
/testuserq:
  post:
    description: testuserq
    body:
        application/json:
          type:  apiLib.userq
          example: |
            {
              "msgtype": "register",
              "message": {
                "username": "test1",
                "password": "test",
                "name": "testname"
              }
            }
    responses:
      200:
        body:
          application/json:
            type: object
            examples:
              example1: !include examples/testuserq/register.raml
/testerrorq:
  post:
    description: testerrorq
    body:
        application/json:
          example: |
            {"transactionId":"9e56521b.ec30.4709.b477.c743f3854063","msgtype":"register","transactionstatus":"Failed","error":{"description":"The client with ID: test1 is already registered","type":"APPERROR:CLIENT_ALREADY_EXISTS","cause":"The client with ID: test1 is already registered"}}
    responses:
      200:
        body:
          application/json:
            type: object
            examples:
              example1: !include examples/testerrorq/errorcode-0001.raml
/readproduct:
  get:
    description: readproduct
    responses:
      200:
        body:
          application/json:
            type: object
            examples:
              example1: !include examples/readproduct/example.raml
/createproduct:
  post:
    description: createproduct
    body:
        application/json:
          type:  apiLib.createproduct
          example: |
            {
              "id": "2",
              "title": "iPhone X",
              "description": "SIM-Free, Model A19211 6.5-inch Super Retina HD display with OLED technology A12 Bionic chip with ...",
              "price": 899,
              "discountPercentage": 12.96,
              "rating": 4.69,
              "stock": 94,
              "brand": "Apple",
              "category": "smartphones",
              "thumbnail": "https://www.publicdomainpictures.net/pictures/10000/velka/1-1210009435EGmE.jpg"
              
            }
    responses:
      200:
        body:
          application/json:
            type: object
            examples:
              example1: !include examples/createproduct/example.raml
/deleteproduct:
  post:
    description: deleteproduct
    body:
        application/json:
          type:  apiLib.deleteproduct
          example: |
            {
              "id": "1",
              "title": "iPhone X"
            }
    responses:
      200:
        body:
          application/json:
            type: object
            examples:
              example1: !include examples/deleteproduct/example.raml
/updateproduct:
  post:
    description: updateproduct
    body:
        application/json:
          type:  apiLib.updateproduct
          example: |
            {
              "title": "iPhone X",
              "brand": "Samsung"
            }
    responses:
      200:
        body:
          application/json:
            type: object
            examples:
              example1: !include examples/deleteproduct/example.raml
/order:
  post:
    description: createorder
    body:
        application/json:
          example: |
            {
              "ordertype": "WEB",
              "servicetype": "Azure",
              "odreritems" : [
                {
                  "productId": "1",
                  "quantity": "1"
                },
                {
                  "productId": "2",
                  "quantity": "1"
                },
                {
                  "productId": "3",
                  "quantity": "1"
                }                
              ]
            }
    responses:
      200:
        body:
          application/json:
/readorders:
  get:
    description: readorder
    responses:
      200:
        body:
          application/json:
            type: array
            examples:
/orderitem:
  post:
    description: createorderitem
    body:
        application/json:
          example: |
                [
                  {
                    "productId": "1",
                    "quantity": "1"
                  },
                  {
                    "productId": "2",
                    "quantity": "1"
                  },
                  {
                    "productId": "3",
                    "quantity": "1"
                  }                
                ]
    responses:
      200:
        body:
          application/json:
/orderstatus:
  post:
    description: updateorderstatus
    body:
        application/json:
          example: |
            {
              "orderidentifier": "4fcffb3c-0d8d-4892-9a7b-2b81402de061",
              "status": "complete"
            }
    responses:
      200:
        body:
          application/json:
